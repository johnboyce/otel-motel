services:
  # PostgreSQL for Keycloak persistence
  postgres:
    image: postgres:16-alpine
    container_name: otel-motel-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-keycloak-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - otel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak && psql -U keycloak -d keycloak -c 'SELECT 1' > /dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  # DynamoDB Local (LocalStack)
  dynamodb:
    image: localstack/localstack:latest
    container_name: otel-motel-dynamodb
    environment:
      SERVICES: dynamodb
      DEBUG: 1
      DATA_DIR: /tmp/localstack/data
      DOCKER_HOST: unix:///var/run/docker.sock
    ports:
      - "4566:4566"   # LocalStack gateway
      - "4571:4571"   # DynamoDB specific port
    volumes:
      - "./.localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - otel-network
    healthcheck:
      test: ["CMD-SHELL", "awslocal dynamodb list-tables || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: otel-motel-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=otel-motel-cluster
      - node.name=otel-motel-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - otel-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 60s

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: otel-motel-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=otel-motel-kibana
    ports:
      - "5601:5601"
    networks:
      - otel-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 60s

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-motel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./docker/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
    networks:
      - otel-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:13133/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Keycloak for OAuth2/OIDC
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: otel-motel-keycloak
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HTTP_PORT: 8180
      KC_LOG_LEVEL: INFO
      KC_HEALTH_ENABLED: "true"
    ports:
      - "8180:8180"
    volumes:
      - ./docker/keycloak:/opt/keycloak/data/import
    networks:
      - otel-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8180;echo -e 'GET /health/ready HTTP/1.1\r\nhost: 127.0.0.1\r\nConnection: close\r\n\r\n' >&3;grep -q '200 OK' <&3"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 120s

volumes:
  postgres_data:
    driver: local
  dynamodb_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  otel-network:
    driver: bridge

